\documentclass{article}
\usepackage{alltt}
\usepackage{amsmath}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}

\title{Code for Figure 2} 

\usepackage{breakurl}
\begin{document}
\maketitle

<<setup, include=FALSE, cache=FALSE>>=
# this is equivalent to \SweaveOpts{...}
opts_chunk$set(fig.path='figures/', fig.align='center', fig.show='hold')
options(replace.assign=TRUE,width=60)
@

\section{Preliminaries}

Load the necessary libraries, source the file with the R functions:
<<libsEtc, include=TRUE>>=
library(ggplot2)

source("functions.R")
@

Will use the same theme throughout, so just declare this variable:
<<>>=
themeUsed <- theme_bw(base_size = 20) +
  theme(axis.line = element_line(colour = "black"),
        plot.title = element_text(size = 15, hjust=0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        legend.background = element_rect(fill="transparent"),
        legend.key = element_blank(),
        legend.text.align = 0,
        legend.position = c(0.15,0.28),
        axis.line.x = element_line(color="black", size = 0.5), ##this is to show axes - bug in this version of ggplot2
        axis.line.y = element_line(color="black", size = 0.5)) 
@
  
\section{Dataset for panel a)}

These results are for the $I=20, p\ge 2$ exchangeable case with equal within-study  and between-study variances, with $S_i^2 \equiv S^2$ and $\rho_i = \frac{\rho(i-1)}{I}$ (within study). The parameters we vary are 
\frac{\sigma^2}{S^2}$ and $p$, as we take $\rho^{BS} = 0.5$ 
We save the relative efficiencies for only one of coefficients, as they are all equal.
<<loopEff, include=TRUE>>=
##number of studies
I <- 20

##save results in data frame
##het is sigma^2/S^2
bigMat <- expand.grid(p = 2:20,
                      rhoBS=0.5,
                      het = c(0, 1/5, 1, 5),
                      RelEff = NA)
for(rr in 1:nrow(bigMat))
{
    p <- bigMat[rr, 1]
    rhoBS <- bigMat[rr, 2]
    het <- bigMat[rr, 3]

    ##index over the studies
    i <- 1:I
    ##within-study correlations
    rho.iW <- (i-1)/I
    ##overall correlations    
    rho.i <- (rho.iW + rhoBS*het)/(1+het)

    ##calculate the two sums
    ##Sum1 is over 1/(1-rho_i)
    ##Sum2 is over 1/(1+(p-1)*rho_i)
    Sum1 <- sum(1/(1-rho.i))
    Sum2 <- sum(1/(1+(p-1)*rho.i))
    
    bigMat$RelEff[rr] <- I/p * (Sum1 + (p-1)*Sum2)/(Sum1*Sum2)
}


##make het a factor (for ggplot)
bigMat$het <- as.factor(bigMat$het)
@

\section{Create plot for panel a)}

\begin{figure}[h]
<<Figure_2_panel_a>>=
panelA <- ggplot(bigMat,
                 aes(x=p, y=RelEff))+
  geom_line(aes(color=het, shape=het)) +
  geom_point(size=3.0, aes(color=het, shape=het)) +
  themeUsed +
  scale_y_continuous(name = expression(paste(RelEff^T)),
                     limits=c(min(bigMat$RelEff)*0.8, 1)) +
  scale_color_discrete(name = "",
                       labels = 
                         c(expression(paste(sigma^2, "/", S^2, "=",
                                            0)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            1/5)),
                           ##expression(paste(sigma^2, "/", S^2, "=",
                           ##                 1/2)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            1)),
                           ##expression(paste(sigma^2, "/", S^2, "=",
                           ##                 2)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            5)))) +
  scale_shape_discrete(name = "",
                       labels = 
                         c(expression(paste(sigma^2, "/", S^2, "=",
                                            0)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            1/5)),
                           ##expression(paste(sigma^2, "/", S^2, "=",
                           ##                1/2)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            1)),
                           ##expression(paste(sigma^2, "/", S^2, "=",
                           ##                 2)),
                           expression(paste(sigma^2, "/", S^2, "=",
                                            5)))) +                       
  labs(title=expression(atop("(a)", paste("Random effects: I = 20, ",
                                          S[i]^2, " = ", S^2, ", ",
                                          rho[i], " = ", (i-1)/I, ", ",
                                          ##"\n",
                                          rho^BS, " = ", 0.5))))

@
\end{figure}

\section{Get the combined dataset for panel b)}

Load the files representing the summary for each scenario with 0 heterogeneity and save the results in a single dataframe, \textttt{Vars0}:
<<combComb0, include=TRUE>>=
allFiles <- list.files("simResultsComb")
##remove all the files with "Suppl" in title
allFiles <- allFiles[-grep("Suppl", allFiles)]

##save the three Vars for the different combinations
VarsAll <- expand.grid(I = c(5, 10, 15, 20),
                       p = 2:10,
                       corrBtw = c(0, 0.5),
                       varBtw = c(0, 1))

##only keep combinations of corrBtw=0 & varBtw=0, corrBtw=0.5 & varBtw=1
VarsAll <- VarsAll[(VarsAll$corrBtw == 0 & VarsAll$varBtw == 0) |
                   (VarsAll$corrBtw == 0.5 & VarsAll$varBtw == 1) ,]

VarsAll$known <- VarsAll$unknown <- VarsAll$univKnown <- VarsAll$univ <- NA

for(file in 1:length(allFiles))
{
    load(paste("simResultsComb", 
               allFiles[file], sep="/"))

    rowNr <- gsub("combine_cost_of_estimation_", "", allFiles[file])
    rowNr <- gsub(".RData", "", rowNr)
    rowNr <- as.numeric(rowNr)

    VarsAll[rowNr, colnames(VarsAll)] <- Vars[rowNr, colnames(VarsAll)]
}
VarsAll$Ratio <- VarsAll$known/VarsAll$unknown
VarsAll$RelEff <- VarsAll$unknown/VarsAll$univ
VarsAll$RelEffT <- VarsAll$known/VarsAll$univKnown
range(VarsAll$Ratio)

##only keep the ones with varBtw = 0 and I=20
Vars0 <- VarsAll[VarsAll$varBtw == 0 & VarsAll$I == 20 ,]
@

Load the files representing the summary for each scenario with non-0 heterogeneity and save the results in a single dataframe, \textttt{VarsAll}:
<<combComb, include=TRUE>>=
allFiles <- list.files("simResultsComb")
##keep only files with "Suppl" in title
allFiles <- allFiles[grep("Suppl", allFiles)]

##save the three Vars for the different combinations
VarsAll <- expand.grid(I = 20, 
                       p = 2:10,
                       corrBtw = c(0, 0.5),
                       varBtw = c(1/5, 1, 5))

VarsAll$known <- VarsAll$unknown <- VarsAll$univKnown <- VarsAll$univ <- NA

for(file in 1:length(allFiles))
{
    load(paste("simResultsComb", allFiles[file], sep="/"))

    rowNr <- gsub("combine_cost_of_estimation_Suppl_", "", allFiles[file])
    rowNr <- gsub(".RData", "", rowNr)
    rowNr <- as.numeric(rowNr)

    VarsAll[rowNr, colnames(VarsAll)] <- Vars[rowNr, colnames(VarsAll)]
}
VarsAll$Ratio <- VarsAll$known/VarsAll$unknown
VarsAll$RelEff <- VarsAll$unknown/VarsAll$univ
VarsAll$RelEffT <- VarsAll$known/VarsAll$univKnown
range(VarsAll$Ratio)
@

Separate out what is needed for Panel b):
<<sepPanels, include=TRUE>>=
Vars <- VarsAll[VarsAll$corrBtw == 0.5,]

##add in the 0 heterogeneity case
Vars <- rbind(Vars, Vars0)

RelEff.b <- 
  rbind(cbind(as.matrix(Vars[,c("I", "p", "corrBtw", "varBtw", "RelEff"),]),"RelEff"),
        cbind(as.matrix(Vars[,c("I", "p", "corrBtw", "varBtw", "RelEffT"),]),"RelEffT"))
colnames(RelEff.b)[6] <- "Estimate" 
RelEff.b <- as.data.frame(RelEff.b)
sapply(RelEff.b, class)

RelEff.b$p <- as.numeric(as.character(RelEff.b$p))
RelEff.b$corrBtw <- as.numeric(as.character(RelEff.b$corrBtw))
RelEff.b$varBtw <- as.numeric(as.character(RelEff.b$varBtw))
RelEff.b$RelEff <- as.numeric(as.character(RelEff.b$RelEff))
@

<<Figure_2_panel_b, fig.width=6, fig.height=5, dpi=800>>=
panelB <- ggplot(RelEff.b, aes(x=p, y=RelEff))+
  geom_point(size=3.0, aes(color=as.factor(varBtw), shape=as.factor(varBtw)))+
  geom_line(aes(linetype=Estimate,color=as.factor(varBtw), shape=as.factor(varBtw)))+
  themeUsed +
  ylab(expression(RelEff)) +
  ylim(limits=c(min(bigMat$RelEff)*0.8, 1)) +
  scale_color_discrete(name = "",
                       labels = 
                         c(expression(paste(sigma^2, "/", S^2, "=",
                                            0)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            1/5)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            1)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            5)))) +
  scale_shape_discrete(name = "",
                       labels = 
                         c(expression(paste(sigma^2, "/", S^2, "=",
                                            0)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            1/5)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            1)),
                           expression(paste(sigma^2, "/", S^2, phantom() %~~% phantom(),
                                            5)))) +     
  labs(color="", shape="",
       title=expression(atop("(b)",paste("Random effects: ",
                                        S[i]^2,  phantom() %~~% phantom() , 1, ", ",
                                        rho[i], phantom() %~~% phantom(), (i-1)/I, ", ",
                                        rho^BS, " = ", 0.5, ", ",
                                        ##"\n",
                                        I, " = ", 20)))) +
  scale_linetype_discrete(name = "",
                          labels = 
                            c(expression(paste(RelEff)),
                              expression(paste(RelEff^T))))
@

\section{Dataset for panel c)}

These results are for the $p\ge 2$ exchangeable case with equal within-study  and between-study variances, with $S_i^2 \equiv S^2, \rho_i = \frac{\rho(i-1)}{I}, \Sigma=0$ (within study). The parameter we vary is the number of studies, $I.$
We save the relative efficiencies for only one of coefficients, as they are all equal.
<<loopEffC, include=TRUE>>=
##save results in data frame
##het is sigma^2/S^2
bigMat <- expand.grid(p = 2:20,
                      I=c(5,10,15,20),
                      RelEff = NA)
for(rr in 1:nrow(bigMat))
{
    p <- bigMat[rr, 1]
    I <- bigMat[rr, 2]
    
    het <- 0

    ##index over the studies
    i <- 1:I
    ##within-study correlations
    rho.iW <- (i-1)/I
    ##overall correlations    
    rho.i <- (rho.iW + rhoBS*het)/(1+het)

    ##calculate the two sums
    ##Sum1 is over 1/(1-rho_i)
    ##Sum2 is over 1/(1+(p-1)*rho_i)
    Sum1 <- sum(1/(1-rho.i))
    Sum2 <- sum(1/(1+(p-1)*rho.i))
    
    bigMat$RelEff[rr] <- I/p * (Sum1 + (p-1)*Sum2)/(Sum1*Sum2)
}

##make these changes for ggplot
bigMat$I <- as.factor(paste("I=", bigMat$I, sep=""))
bigMat$I <- relevel(bigMat$I, ref="I=5")

@

\section{Create plot for panel c)}

\begin{figure}[h]
<<Figure_2_panel_c>>=
panelC <- ggplot(bigMat,
                 aes(x=p, y=RelEff))+
  geom_line(aes(color=I, shape=I)) +
  geom_point(size=3.0, aes(color=I, shape=I)) +
  themeUsed +
  scale_y_continuous(name = expression(paste(RelEff^T)),
                     limits=c(min(bigMat$RelEff)*0.85, 1)) +
  scale_color_discrete(name="")+
  scale_shape_discrete(name="")+
  labs(title=expression(atop("(c)", paste("Random effects: ",
                                          S[i]^2, " = ", S^2, ", ",
                                          rho[i], " = ", (i-1)/I, ", ",
                                          ##"\n",
                                          Sigma, " = ", 0))))

@
\end{figure}

\section{Get the combined dataset for panel d)}

Load the files representing the summary for each scenario and save the results in a single dataframe, \textttt{VarsAll}:
<<combCombD, include=TRUE>>=
allFiles <- list.files("simResultsComb")
##remove all the files with "Suppl" in title
allFiles <- allFiles[-grep("Suppl", allFiles)]

##save the three Vars for the different combinations
VarsAll <- expand.grid(I = c(5, 10, 15, 20),
                       p = 2:10,
                       corrBtw = c(0, 0.5),
                       varBtw = c(0, 1))

##only keep combinations of corrBtw=0 & varBtw=0, corrBtw=0.5 & varBtw=1
VarsAll <- VarsAll[(VarsAll$corrBtw == 0 & VarsAll$varBtw == 0) |
                   (VarsAll$corrBtw == 0.5 & VarsAll$varBtw == 1) ,]

VarsAll$known <- VarsAll$unknown <- VarsAll$univKnown <- VarsAll$univ <- NA

for(file in 1:length(allFiles))
{
    load(paste("simResultsComb", 
               allFiles[file], sep="/"))

    rowNr <- gsub("combine_cost_of_estimation_", "", allFiles[file])
    rowNr <- gsub(".RData", "", rowNr)
    rowNr <- as.numeric(rowNr)

    VarsAll[rowNr, colnames(VarsAll)] <- Vars[rowNr, colnames(VarsAll)]
}
VarsAll$Ratio <- VarsAll$known/VarsAll$unknown
VarsAll$RelEff <- VarsAll$unknown/VarsAll$univ
VarsAll$RelEffT <- VarsAll$known/VarsAll$univKnown
range(VarsAll$Ratio)

VarsAll$I <- as.factor(paste("I=", VarsAll$I, sep=""))
VarsAll$I <- relevel(VarsAll$I, ref="I=5")
@

Separate out what is needed for Panel d):
<<sepPanelD, include=TRUE>>=
Vars.b <- VarsAll[VarsAll$corrBtw == 0 &
  VarsAll$varBtw == 0,]

##for panel c, have both RelEff and RelEffT
##probably easier to just create another object
RelEff.d <- 
  rbind(cbind(as.matrix(Vars.b[,c("I", "p", "corrBtw", "varBtw", "RelEff"),]),"RelEff"),
        cbind(as.matrix(Vars.b[,c("I", "p", "corrBtw", "varBtw", "RelEffT"),]),"RelEffT"))
colnames(RelEff.d)[6] <- "Estimate" 
RelEff.d <- as.data.frame(RelEff.d)
sapply(RelEff.d, class)

RelEff.d$p <- as.numeric(as.character(RelEff.d$p))
RelEff.d$corrBtw <- as.numeric(as.character(RelEff.d$corrBtw))
RelEff.d$varBtw <- as.numeric(as.character(RelEff.d$varBtw))
RelEff.d$RelEff <- as.numeric(as.character(RelEff.d$RelEff))
RelEff.d$I <- relevel(RelEff.d$I, ref="I=5")

@

\section{Create plot for panel d)}

<<Figure_2_panel_d, fig.width=6, fig.height=5, dpi=800>>=
panelD <- ggplot(RelEff.d, aes(x=p, y=RelEff))+
  geom_point(size=3.0, aes(color=I, shape=I))+
  geom_line(aes(color=I, shape=I, linetype=Estimate))+
  themeUsed+
  ylab(expression(RelEff)) +
  ylim(min(bigMat$RelEff)*0.85, 1) +
  labs(color="", shape="", 
       title=expression(atop("(d)", paste("Random effects: ",
                                          S[i]^2,  phantom() %~~% phantom() , 1, ", ",
                                          rho[i], phantom() %~~% phantom(), (i-1)/I, ", ",
                                          ##"\n",
                                          Sigma, " = ", 0)))) +
  scale_linetype_discrete(name = "",
                          labels = 
                            c(expression(paste(RelEff)),
                              expression(paste(RelEff^T))))
@


\section{Put all four panels together}

<<Figure_2_panels_abcd, fig.width=12, fig.height=12, dpi=800>>=
multiplot(panelA, panelC, panelB, panelD, cols=2)
@

\end{document}
