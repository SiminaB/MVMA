bigMat.b <- bigMat[bigMat[,"r"]==0.5, ]
##transform back to data frame (for ggplot)
bigMat.b <- as.data.frame(bigMat.b)
##make rho2 into factor (for ggplot)
bigMat.b$rho2 <- as.factor(bigMat.b$rho2)
@
<<Fixed_eff_AR1, fig.width=6, fig.height=5>>=
panelB <- ggplot(bigMat.b,
aes(x=p, y=RelEff))+
geom_line(aes(color=rho2, shape=rho2)) +
geom_point(size=3.0, aes(color=rho2, shape=rho2)) +
theme_bw(base_size = 20)+
scale_color_discrete(name = "",
labels =
c(expression(paste(rho[2], "=",
0)),
expression(paste(rho[2], "=",
0.25)),
expression(paste(rho[2], "=",
0.5)),
expression(paste(rho[2], "=",
0.75)))) +
scale_shape_discrete(name = "",
labels =
c(expression(paste(rho[2], "=",
0)),
expression(paste(rho[2], "=",
0.25)),
expression(paste(rho[2], "=",
0.5)),
expression(paste(rho[2], "=",
0.75)))) +
theme(axis.line = element_line(colour = "black"),
plot.title = element_text(size = 16, hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.key = element_blank(),
legend.text.align = 0) +
labs(title=
expression(atop("(b)",
paste("Fixed effects: I = 2, ",
rho[1], " = ", 0, ", ",
r, " = ", 0.5))))
panelB
@
\section{Block diagonal correlation matrices}
These results are for the $I=2, p\ge 2$ case with block diagonal matrices with block size of 5.
so the parameters we vary are: $r, \rho_1, \rho_2, p$.
We save the relative efficiencies for only one of coefficients, as they are all equal.
We consider $\rho_1 = 0$.
<<loop_bd, include=TRUE>>=
##save results in data frame
bigMat <- expand.grid(rho1 = 0,
rho2 = 0:3/4,
r = c(1, 3, 5, 9)/10,
nrBlocks = 1:4,
RelEff = NA)
for(i in 1:nrow(bigMat))
{
rho1 <- bigMat[i, 1]
rho2 <- bigMat[i, 2]
r <- bigMat[i, 3]
nrBlocks <- bigMat[i, 4]
##get variance-covariance matrices
S1 <- r*blockDiag(rho1, sizeBlock=5, nrBlocks=nrBlocks)
S2 <- (1-r)*blockDiag(rho2, sizeBlock=5, nrBlocks=nrBlocks)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
varMVMA <- solve(solve(S1)+solve(S2))
varUVMA <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) +
solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
bigMat$RelEff[i] <- varMVMA[1,1]/varUVMA[1,1]
}
S1
S2
image(S2)
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1
S1 <- as.matrix(S1)
S1
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S1
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- (S2+t(S2))/2
S2
diag(S2) <- 1
S2 <- as.matrix(S2)
S1
S2
solve(solve(S1)+solve(S2))
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %%
solve(solve(U1)+solve(U2))
diag(MVMA4/UVMA4)
diag(MVMA4)/diag(UVMA4)
MVMA
MVMA4
UVMA4
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
diag(MVMA4)/diag(UVMA4)
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
V1 <- diag(c(0.2,0.4,0.6,0.8))
V1
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S1
cov2cor(S1)
S1 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1
S2
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1
S2
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
V1 <- diag(c(0.2,0.4,0.6,0.8))
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S2 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
V1 <- diag(c(0.2,0.4,0.6,0.8))
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S2 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
V1 <- diag(c(0.2,0.4,0.6,0.8))
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S2 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
V1 <- diag(c(0.2,0.4,0.6,0.8))
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S2 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- bdiag(matrix(runif(4,0,0.5),2,2), matrix(runif(4),2,2))
S1 <- as.matrix(S1)
diag(S1) <- 1
S1 <- (S1+t(S1))/2
S2 <- bdiag(matrix(runif(4,0,0.5),2,2), matrix(runif(4),2,2))
S2 <- as.matrix(S2)
diag(S2) <- 1
S2 <- (S2+t(S2))/2
V1 <- diag(c(0.2,0.4,0.6,0.8))
V2 <- diag(c(0.1,0.3,0.5,0.7))
S1 <- sqrt(V1) %*% S1 %*% sqrt(V1)
S2 <- sqrt(V2) %*% S2 %*% sqrt(V2)
U1 <- diag(diag(S1))
U2 <- diag(diag(S2))
MVMA4 <- solve(solve(S1)+solve(S2))
UVMA4 <- solve(solve(U1)+solve(U2)) %*%
(solve(U1) %*% S1 %*% solve(U1) + solve(U2) %*% S2 %*% solve(U2)) %*%
solve(solve(U1)+solve(U2))
U1a <- diag(diag(S1a))
U1b <- diag(diag(S1b))
U2a <- diag(diag(S2a))
U2b <- diag(diag(S2b))
S1a <- S1[1:2, 1:2]
S1b <- S1[3:4, 3:4]
S2a <- S2[1:2, 1:2]
S2b <- S2[3:4, 3:4]
MVMA2a <- solve(solve(S1a)+solve(S2a))
UVMA2a <- solve(solve(U1a)+solve(U2a)) %*%
(solve(U1a) %*% S1a %*% solve(U1a) + solve(U2a) %*% S2a %*% solve(U2a)) %*%
solve(solve(U1a)+solve(U2a))
MVMA2b <- solve(solve(S1b)+solve(S2b))
UVMA2b <- solve(solve(U1b)+solve(U2b)) %*%
(solve(U1b) %*% S1b %*% solve(U1b) + solve(U2b) %*% S2b %*% solve(U2b)) %*%
solve(solve(U1b)+solve(U2b))
diag(MVMA4)/diag(UVMA4)
diag(MVMA2a)/diag(UVMA2a)
diag(MVMA2b)/diag(UVMA2b)
S1 <- r*ARMAcor(phi=rho1, rho=1, n=p)
S1
S1 <- S2 <- diag(rep(1,p))
S1
S1 <- r*S1
S2 <- (1-r)*S2
library(dplyr)
library(glmnet)
install.packages(c("ROCR","glmnet"))
setwd("~/GitHub/MVMA/make_Figure_S9")
library(ggplot2)
source("functions.R")
themeUsed <- theme_bw(base_size = 20) +
theme(axis.line = element_line(colour = "black"),
plot.title = element_text(size = 15, hjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.background = element_rect(fill="transparent"),
legend.key = element_blank(),
legend.text.align = 0,
legend.position = c(0.15,0.28),
axis.line.x = element_line(color="black", size = 0.5), ##this is to show axes - bug in this version of ggplot2
axis.line.y = element_line(color="black", size = 0.5))
allFiles <- list.files("simResultsComb")
##remove files that have "bd_het" in the title
allFiles <- allFiles[-grep("bd_het", allFiles)]
##save the three Vars for the different combinations
VarsAll <- expand.grid(I = c(5, 10, 15, 20),
p = 2:10,
corrBtw = c(0,0.5),
varBtw = c(0, 1))
##only keep combinations of corrBtw=0 & varBtw=0, corrBtw=0.5 & varBtw=1
VarsAll <- VarsAll[(VarsAll$corrBtw == 0 & VarsAll$varBtw == 0) |
(VarsAll$corrBtw == 0.5 & VarsAll$varBtw == 1) ,]
VarsAll$known <- VarsAll$unknown <- VarsAll$univKnown <- VarsAll$univ <-
VarsAll$Bayes <- VarsAll$univBayes <- NA
allFiles
getwd()
allFiles
allFiles <- list.files("simResultsComb")
allFiles
